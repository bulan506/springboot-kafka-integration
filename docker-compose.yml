version: '3.8'

services:
  # Base de datos para Producer
  mongo-producer:
    image: mongo:latest
    container_name: mongo-producer
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: gringotts
      MONGO_INITDB_ROOT_PASSWORD: goldenkey123
      MONGO_INITDB_DATABASE: GringottsBank_Producer
    volumes:
      - mongo_producer_data:/data/db

  # Base de datos para Consumer
  mongo-consumer:
    image: mongo:latest
    container_name: mongo-consumer
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: gringotts
      MONGO_INITDB_ROOT_PASSWORD: goldenkey123
      MONGO_INITDB_DATABASE: GringottsBank_Consumer
    volumes:
      - mongo_consumer_data:/data/db

  # Kafka y Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # Grafana
  grafana:
    image: grafana/grafana:10.4.2
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana

  # Loki
  loki:
    image: grafana/loki:2.9.3
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  # Promtail
  promtail:
    image: grafana/promtail:2.9.3
    volumes:
      - ./logs:/var/log
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml

volumes:
  mongo_producer_data:
  mongo_consumer_data:
  grafana-storage: